/*
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

configureMaven(
  project,
  'Endpoints API Management - Authentication',
  'Enables authentication by multiple authentication providers'
)
archivesBaseName = 'endpoints-management-auth'

configurations {
  integrationTestCompile.extendsFrom testCompile
  integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
  compile project(":endpoints-service-config")
  compile(project(":endpoints-control")) {
    transitive = false
  }

  compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
  compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
  compile "com.google.guava:guava:${guavaVersion}"
  compile "com.google.flogger:flogger:${floggerVersion}"
  runtime "com.google.flogger:flogger-system-backend:${floggerVersion}"
  compile "com.google.http-client:google-http-client:${httpClientVersion}"
  compile "javax.servlet:servlet-api:${servletApiVersion}"
  compile "org.bitbucket.b_c:jose4j:${jose4jVersion}"

  testCompile "junit:junit:${junitVersion}"
  testCompile "org.bouncycastle:bcmail-jdk15on:${bouncycastleVersion}"
  testCompile "org.mockito:mockito-core:${mockitoVersion}"

  testCompile "org.apache.commons:commons-lang3:${commonsLang3Version}"
  testCompile "org.eclipse.jetty:jetty-server:${jettyVersion}"
  testCompile "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
  testCompile "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
  testCompile "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
}

sourceSets {
  integrationTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file("src/integration-test/java")
    }
    resources.srcDir file("src/integration-test/resources")
  }
}

task integrationTest(type: Test) {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
